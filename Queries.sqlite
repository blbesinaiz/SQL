/* Writing queries for New York Restaurants 
Table already created for me
*/

/* View Current Table */
SELECT * FROM nomnom;


/* View distinct elements in a database */
SELECT DISTINCT neighborhood FROM nomnom;
SELECT DISTINCT cuisine FROM nomnom;


/* View items in certain category */
SELECT name FROM nomnom WHERE cuisine = 'Chinese';


/* Return certain parameters */
SELECT name FROM nomnom WHERE review >= 4;
-- CAN support following operations: =, !=, <, >, <=, >=

SELECT name FROM nomnom WHERE cuisine = 'Italian' AND price = '$$$';
SELECT name FROM nomnom WHERE name LIKE '%meatball%';
SELECT name FROM nomnom WHERE neighborhood = 'Midtown' OR neighborhood = 'Downtown' OR neighborhood = 'Chinatown';
SELECT name FROM nomnom WHERE health IS NULL;
SELECT name FROM nomnom ORDER BY review DESC LIMIT 10;


/* Execute a CASE Statement */
SELECT name, review,
	CASE
  	When review > 4.5 THEN 'Extraordinary'
    When review > 4 THEN 'Excellent'
    When review > 3 THEN 'Good'
    When review > 2 THEN 'Fair'
    Else 'Poor'
  END AS 'Rating'
FROM nomnom;

 
 /* Select users with specifid date range */
 SELECT email FROM users WHERE birthday BETWEEN '1980-01-01' AND '1989-12-31';
 -- When using BETWEEN: Strings 2nd range NOT inclusive while Integers 2nd range inclusive
 
--OR
SELECT email FROM users WHERE birthday >= '1980-01-01' AND birthday <= '1989-12-31';

/* Searching database using strings */
SELECT email, created_at FROM users WHERE created_at < '2017-05-01';
SELECT email, test FROM users WHERE test = 'bears';
SELECT email, campaign FROM users WHERE campaign Like 'BBB%';
SELECT email, campaign, test FROM users WHERE campaign IS NOT NULL AND test IS NOT NULL;

/* Compound Statements */
SELECT id AS '#', special_instructions AS 'Notes'
FROM orders
WHERE special_instructions IS NOT NULL
AND special_instructions LIKE '%box%'
ORDER BY special_instructions ASC;

